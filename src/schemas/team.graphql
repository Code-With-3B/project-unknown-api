scalar DateTime
scalar JSON

interface ResponsePayload {
  success: Boolean!
  code: [String!]
}

enum TeamStatus {
  PRIVATE
  SUSPENDED
  DEACTIVATED
  OPEN_TO_CONNECT
}

enum TeamRole {
  OWNER
  COACH
  MANAGER
  ANALYST
  IGL
  SUPPORT
  SNIPER
  ASSAULTER
  SUBSTITUTE
  ANY
  NOT_MENTIONED
}

enum TeamInvitationStatus {
  SENT
  WITHDRAWN
  EXPIRED
  ACCEPTED
  DENIED
}

type Team {
  id: ID!
  name: String!
  description: String!
  game: String!
  status: TeamStatus!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type TeamInvitation {
  id: ID!
  team: Team!
  sendBy: ID!
  sendTo: ID!
  roles: [TeamRole!]!
  status: TeamInvitationStatus!
  expiration: DateTime!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input CreateTeamInput {
  name: String!
  description: String!
  game: String!
  ownerId: ID!
}

input TeamInvitationInput {
  teamId: ID!
  sendBy: ID!
  sendTo: ID!
  expiration: DateTime!
  roles: [TeamRole!]!
}

type CreateTeamResponse implements ResponsePayload {
  success: Boolean!
  code: [String!]
  team: Team
}

type TeamInvitationResponse implements ResponsePayload {
  success: Boolean!
  code: [String!]
  invitation: TeamInvitation
}

type Mutation {
  createTeam(input: CreateTeamInput!): CreateTeamResponse!
  invitePlayer(input: TeamInvitationInput!): TeamInvitationResponse!
}